{"version":3,"sources":["models/lib/Model.js","models/index.js","models/seeds.js","components/CategoryList.js","components/CardList.js","components/CancelConfirmButton.js","components/CardEditor.js","App.js","serviceWorker.js","index.js"],"names":["Model","props","arguments","length","undefined","Object","classCallCheck","this","_initializeCollection","collection","defaults","_copy","_onGetLength","bind","all","_onGetAll","find","_onFind","add","_onAdd","update","_onUpdate","createClass","key","value","obj","JSON","parse","stringify","id","model","newAttrs","_getNewId","newModel","assign","apply","push","attrs","modelId","newCollection","reduce","max","next","Math","Category","name","description","color","Card","categoryId","text","CategoryList","_this","possibleConstructorReturn","getPrototypeOf","call","state","categories","activeCategoryId","nextProps","setState","_this2","map","category","isActive","editIcon","react_default","a","createElement","className","index_es","icon","categoryName","alt","onClick","handleChangeCategory","handleAddCategory","Component","CardList","cards","activeCardId","setStateDelayed","show","clearTimeout","timeOut","newState","delay","setTimeout","_this3","card","cardName","handleChangeCard","handleAddCard","CancelConfirmButton","_Component","inherits","handleClickCancel","handleClickConfirm","CardEditor","isNameFocused","nameKey","random","nameInput","React","createRef","handleChangeNameFocus","_onChangeNameFocus","assertThisInitialized","_onClickCancel","_onClickConfirm","current","focus","innerText","handleUpdateCard","cardNameClass","ref","contentEditable","autoFocus","stateisNameFocused","CancelConfirmButton_CancelConfirmButton","htmlFor","library","fas","far","fab","App","filter","_onChangeCategory","_onChangeCard","_onAddCategory","_onAddCard","_onUpdateCard","activeCard","categoryInfo","newCategory","cardInfo","newParams","newCard","cardId","newValues","components_CategoryList","components_CardList","getActiveCards","CardEditor_CardEditor","getActiveCard","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qQAIaA,SAAb,WACE,SAAAA,IAAwB,IAAZC,EAAYC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAAIG,OAAAC,EAAA,EAAAD,CAAAE,KAAAP,GACtBO,KAAKC,sBAAsBP,EAAMQ,YACjCF,KAAKG,SAAWH,KAAKI,MAAMV,EAAMS,UAEjCH,KAAKJ,OAASI,KAAKK,aAAaC,KAAKN,MACrCA,KAAKO,IAAMP,KAAKQ,UAAUF,KAAKN,MAC/BA,KAAKS,KAAOT,KAAKU,QAAQJ,KAAKN,MAC9BA,KAAKW,IAAMX,KAAKY,OAAON,KAAKN,MAC5BA,KAAKa,OAASb,KAAKc,UAAUR,KAAKN,MATtC,OAAAF,OAAAiB,EAAA,EAAAjB,CAAAL,EAAA,EAAAuB,IAAA,wBAAAC,MAAA,WAYyC,IAAjBf,EAAiBP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GACjCK,KAAKE,WAAaF,KAAKI,MAAMF,KAbjC,CAAAc,IAAA,QAAAC,MAAA,WAiBkB,IAAVC,EAAUvB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GACV,OAAOwB,KAAKC,MAAMD,KAAKE,UAAUH,MAlBrC,CAAAF,IAAA,YAAAC,MAAA,WAsBI,OAAOjB,KAAKI,MAAMJ,KAAKE,cAtB3B,CAAAc,IAAA,eAAAC,MAAA,WA0BI,OAAOjB,KAAKE,WAAWN,SA1B3B,CAAAoB,IAAA,UAAAC,MAAA,SAiCUK,GACN,IAAMC,EAAQvB,KAAKE,WAAWO,KAAK,SAAAc,GAAK,OAAIA,EAAMD,KAAOA,IACzD,OAAOC,EAAQvB,KAAKI,MAAMmB,QAAS1B,IAnCvC,CAAAmB,IAAA,SAAAC,MAAA,WA0CqB,IACXO,EAAW,CADA7B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAGXK,KAAKG,SACL,CAAEmB,GAAItB,KAAKyB,cAGPC,EAAW5B,OAAO6B,OAAPC,MAAA9B,OAAiB0B,GAElC,OADAxB,KAAKE,WAAW2B,KAAKH,GACd1B,KAAKI,MAAMsB,KAnDtB,CAAAV,IAAA,YAAAC,MAAA,WA0DwB,IAAZa,EAAYnC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GACVoC,EAAUD,EAAMR,GACtB,GAAKQ,EAAMR,GAAX,CAIA,IAAMU,EAAgBhC,KAAKI,MAAMJ,KAAKE,YAClCqB,EAAQS,EAAcvB,KAAK,SAAAc,GAAK,OAAIA,EAAMD,KAAOS,IACrD,GAAKR,EAIL,OAFAA,EAAQzB,OAAO6B,OAAOJ,EAAOO,GAC7B9B,KAAKE,WAAa8B,EACXhC,KAAKI,MAAMmB,MAtEtB,CAAAP,IAAA,YAAAC,MAAA,WA6EI,OAHcjB,KAAKE,WAAW+B,OAAO,SAACC,EAAKC,GACzC,OAAOC,KAAKF,IAAIA,EAAKC,EAAKb,KACzB,GACY,MA7EnB7B,EAAA,ICDa4C,EAAW,IAAI5C,EAAM,CAChCS,WCkCwB,CACxB,CACEoB,GAAI,EACJgB,KAAM,YACNC,YAAa,uCACbC,MAAO,OAET,CACElB,GAAI,EACJgB,KAAM,WACNC,YAAa,uBACbC,MAAO,UD5CTrC,SAAU,CACRmC,KAAM,eACNC,YAAa,yBACbC,MAAO,SAIEC,EAAO,IAAIhD,EAAM,CAC5BS,WCbmB,CACnB,CACEoB,GAAI,EACJoB,WAAY,EACZJ,KAAM,cACNC,YAAW,kDACXI,KAAI,gDAEN,CACErB,GAAI,EACJoB,WAAY,EACZJ,KAAM,cACNC,YAAa,OACbI,KAAM,8BAER,CACErB,GAAI,EACJoB,WAAY,EACZJ,KAAM,aACNC,YAAa,qBACbI,KAAM,sBAER,CACErB,GAAI,EACJoB,WAAY,EACZJ,KAAM,YACNC,YAAa,8BACbI,KAAI,yDAEN,CACErB,GAAI,EACJoB,WAAY,EACZJ,KAAM,aACNC,YAAa,cACbI,KAAM,gBDpBRxC,SAAU,CACRmC,KAAM,WACNC,YAAa,qBACbI,KAAM,6BEuDKC,cApEb,SAAAA,EAAYlD,GAAO,IAAAmD,EAAA,OAAA/C,OAAAC,EAAA,EAAAD,CAAAE,KAAA4C,IACjBC,EAAA/C,OAAAgD,EAAA,EAAAhD,CAAAE,KAAAF,OAAAiD,EAAA,EAAAjD,CAAA8C,GAAAI,KAAAhD,KAAMN,KACDuD,MAAQ,CACXC,WAAYxD,EAAMwD,WAClBC,iBAAkBzD,EAAMyD,kBAJTN,yFAQOO,GACpBA,EAAUD,mBAAqBnD,KAAKN,MAAMyD,kBAC5CnD,KAAKqD,SAAS,CAAEF,iBAAkBC,EAAUD,mBAI1CC,EAAUF,aAAelD,KAAKN,MAAMwD,YACtClD,KAAKqD,SAAS,CAAEH,WAAYE,EAAUF,8CAIjC,IAAAI,EAAAtD,KACDkD,EAAalD,KAAKiD,MAAMC,WAAWK,IAAI,SAAAC,GAC3C,IAAMC,EAAWD,EAASlC,KAAOgC,EAAKL,MAAME,iBACtCO,EACJC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eACdH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAiBC,KAAM,CAAC,MAAO,WAI/BF,EAAY,OACZL,IAAUK,GAAa,WAE3B,IAAMG,EACJN,EAAAC,EAAAC,cAAA,QACEC,UAAWA,EACXI,IAAKT,EAAW,kBAAoB,GACpCU,QAAS,kBAAMb,EAAK5D,MAAM0E,qBAAqBZ,EAASlC,MAEvDkC,EAASlB,MAId,OACEqB,EAAAC,EAAAC,cAAA,MACE7C,IAAKwC,EAASlC,IAEb2C,EACAP,KAKP,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACbH,EAAAC,EAAAC,cAAA,UACIX,EACFS,EAAAC,EAAAC,cAAA,MACEC,UAAU,aACV9C,IAAI,cACJmD,QAAS,kBAAMb,EAAK5D,MAAM2E,sBAE1BV,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAiBC,KAAM,CAAC,MAAO,2BA7DhBM,aCsGZC,cArGb,SAAAA,EAAY7E,GAAO,IAAAmD,EAAA,OAAA/C,OAAAC,EAAA,EAAAD,CAAAE,KAAAuE,IACjB1B,EAAA/C,OAAAgD,EAAA,EAAAhD,CAAAE,KAAAF,OAAAiD,EAAA,EAAAjD,CAAAyE,GAAAvB,KAAAhD,KAAMN,KACDuD,MAAQ,CACXuB,MAAO9E,EAAM8E,MACbC,aAAc/E,EAAM+E,aACpBtB,iBAAkBzD,EAAMyD,kBALTN,mFAUjB7C,KAAK0E,gBAAgB,CAAEC,MAAM,mDAI7B3E,KAAK4E,mKAID5E,KAAK6E,SACPD,aAAa5E,KAAK6E,kDAINC,GAAuB,IAAAxB,EAAAtD,KAAb+E,EAAapF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAL,IAChCK,KAAK6E,QAAUG,WAAW,WACxB1B,EAAKD,SAASyB,IACbC,qDAGqB3B,GACpBA,EAAUD,mBAAqBnD,KAAKN,MAAMyD,kBAC5CnD,KAAKqD,SAAS,CAAEF,iBAAkBC,EAAUD,mBAG1ChC,KAAKE,UAAU+B,EAAUoB,SAAWrD,KAAKE,UAAUrB,KAAKN,MAAM8E,QAChExE,KAAK4E,eACL5E,KAAKqD,SAAS,CAAEsB,MAAM,IACtB3E,KAAK0E,gBAAgB,CACnBF,MAAOpB,EAAUoB,MACjBG,MAAM,EACNF,aAAcrB,EAAUqB,gBAEjBrB,EAAUqB,eAAiBzE,KAAKN,MAAM+E,cAC/CzE,KAAKqD,SAAS,CAAEoB,aAAcrB,EAAUqB,gDAKnC,IAAAQ,EAAAjF,KACDwE,EAAQxE,KAAKiD,MAAMuB,MAAMjB,IAAI,SAAA2B,GACjC,IAAMzB,EAAWyB,EAAK5D,KAAO2D,EAAKhC,MAAMwB,aAElCf,EACJC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eACdH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAiBC,KAAM,CAAC,MAAO,WAI/BF,EAAY,OACZL,IAAUK,GAAa,WAE3B,IAAMqB,EACJxB,EAAAC,EAAAC,cAAA,QACEC,UAAWA,EACXI,IAAKT,EAAW,cAAgB,GAChCU,QAAS,kBAAMc,EAAKvF,MAAM0F,iBAAiBF,EAAK5D,MAE/C4D,EAAK5C,MAIV,OACEqB,EAAAC,EAAAC,cAAA,MACE7C,IAAKkE,EAAK5D,IAET6D,EACAzB,KAKHI,EAAS,2BAGb,OAFI9D,KAAKiD,MAAM0B,OAAMb,GAAS,SAG5BH,EAAAC,EAAAC,cAAA,OAAKC,UAAWA,GACdH,EAAAC,EAAAC,cAAA,UACIW,EACFb,EAAAC,EAAAC,cAAA,MACEC,UAAU,aACV9C,IAAI,UACJmD,QAAS,kBAAMc,EAAKvF,MAAM2F,cAAcJ,EAAKhC,MAAME,oBAEnDQ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAiBC,KAAM,CAAC,MAAO,2BA9FpBM,aCAVgB,EAAb,SAAAC,GACE,SAAAD,EAAY5F,GAAO,IAAAmD,EAAA,OAAA/C,OAAAC,EAAA,EAAAD,CAAAE,KAAAsF,IACjBzC,EAAA/C,OAAAgD,EAAA,EAAAhD,CAAAE,KAAAF,OAAAiD,EAAA,EAAAjD,CAAAwF,GAAAtC,KAAAhD,KAAMN,KACDuD,MAAQ,CACX0B,KAAMjF,EAAMiF,OAAQ,GAHL9B,EADrB,OAAA/C,OAAA0F,EAAA,EAAA1F,CAAAwF,EAAAC,GAAAzF,OAAAiB,EAAA,EAAAjB,CAAAwF,EAAA,EAAAtE,IAAA,4BAAAC,MAAA,SAQ4BmC,GACpBA,EAAUuB,OAAS3E,KAAKN,MAAMiF,MAChC3E,KAAKqD,SAAS,CAAEsB,KAAMvB,EAAUuB,SAVtC,CAAA3D,IAAA,SAAAC,MAAA,WAcW,IAAAqC,EAAAtD,KACH8D,EAAY,iBAGhB,OAFI9D,KAAKiD,MAAM0B,OAAMb,GAAa,SAGhCH,EAAAC,EAAAC,cAAA,QAAMC,UAAWA,GACfH,EAAAC,EAAAC,cAAA,QACEC,UAAU,uBACVK,QAAS,kBAAMb,EAAK5D,MAAM+F,sBAE1B9B,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAiBC,KAAM,CAAC,MAAO,mBAGjCL,EAAAC,EAAAC,cAAA,QACEC,UAAU,wBACVK,QAAS,kBAAMb,EAAK5D,MAAMgG,uBAE1B/B,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAiBC,KAAM,CAAC,MAAO,wBA/BzCsB,EAAA,CAAyChB,aCApBqB,cACnB,SAAAA,EAAYjG,GAAO,IAAAmD,EAAA,OAAA/C,OAAAC,EAAA,EAAAD,CAAAE,KAAA2F,IACjB9C,EAAA/C,OAAAgD,EAAA,EAAAhD,CAAAE,KAAAF,OAAAiD,EAAA,EAAAjD,CAAA6F,GAAA3C,KAAAhD,KAAMN,KACDuD,MAAQ,CACXiC,KAAMxF,EAAMwF,KACZU,eAAe,EACfC,QAASzD,KAAK0D,UAEhBjD,EAAKkD,UAAYC,IAAMC,YACvBpD,EAAKqD,sBAAwBrD,EAAKsD,mBAAmB7F,KAAxBR,OAAAsG,EAAA,EAAAtG,QAAAsG,EAAA,EAAAtG,CAAA+C,KAC7BA,EAAK4C,kBAAoB5C,EAAKwD,eAAe/F,KAApBR,OAAAsG,EAAA,EAAAtG,QAAAsG,EAAA,EAAAtG,CAAA+C,KACzBA,EAAK6C,mBAAqB7C,EAAKyD,gBAAgBhG,KAArBR,OAAAsG,EAAA,EAAAtG,QAAAsG,EAAA,EAAAtG,CAAA+C,KAVTA,yFAaOO,GACpBA,EAAU8B,OAASlF,KAAKN,MAAMwF,MAChClF,KAAKqD,SAAS,CAAE6B,KAAM9B,EAAU8B,kDAIjBU,GAAe,IAAAtC,EAAAtD,KAChCA,KAAKqD,SAAS,CAAEuC,kBAEZA,GAEFZ,WAAW,WACT1B,EAAKyC,UAAUQ,QAAQC,SACvB,4CAKJxG,KAAKqD,SAAS,CAAEwC,QAASzD,KAAK0D,WAC9B9F,KAAKkG,uBAAsB,6CAI3BlG,KAAKkG,uBAAsB,GAC3B,IAAM5D,EAAOtC,KAAK+F,UAAUQ,QAAQE,WAAa,WACjDzG,KAAKN,MAAMgH,iBAAiB1G,KAAKiD,MAAMiC,KAAK5D,GAAI,CAAEgB,0CAG3C,IAAA2C,EAAAjF,KACDkF,EAAOlF,KAAKiD,MAAMiC,KACxB,IAAKA,EACH,OAAO,KAGT,IAAIyB,EAAgB,YAGpB,OAFI3G,KAAKiD,MAAM2C,gBAAee,GAAiB,UAG7ChD,EAAAC,EAAAC,cAAA,WAASC,UAAU,kBACjBH,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,MACE+C,IAAK5G,KAAK+F,UACV/E,IAAKhB,KAAKiD,MAAM4C,QAChB/B,UAAW6C,EACXxC,QAAS,kBAAMc,EAAKiB,uBAAsB,IAC1CW,gBAAiB7G,KAAKiD,MAAM2C,cAC5BkB,UAAW9G,KAAK+G,oBAEf7B,EAAK5C,MAERqB,EAAAC,EAAAC,cAACmD,EAAD,CACErC,KAAM3E,KAAKiD,MAAM2C,cACjBH,kBAAmB,kBAAMR,EAAKQ,qBAC9BC,mBAAoB,kBAAMT,EAAKS,yBAInC/B,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,SAAOoD,QAAQ,oBAAf,WACAtD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBoB,EAAK3C,cAG1CoB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,SAAOoD,QAAQ,aAAf,SACAtD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaoB,EAAKvC,eA9EH2B,4CCQxC4C,IAAQvG,IAAIwG,IAAKC,IAAKC,SAoGPC,cAjGb,SAAAA,EAAY5H,GAAO,IAAAmD,EAAA/C,OAAAC,EAAA,EAAAD,CAAAE,KAAAsH,GACjBzE,EAAA/C,OAAAgD,EAAA,EAAAhD,CAAAE,KAAAF,OAAAiD,EAAA,EAAAjD,CAAAwH,GAAAtE,KAAAhD,KAAMN,IAEN,IAAMwD,EAAab,EAAS9B,MACtB4C,EAAmBD,EAAW,GAAG5B,GACjCkD,EAAQ/B,EAAKlC,MAAMgH,OAAO,SAAArC,GAAI,OAAIA,EAAKxC,aAAeS,IACtDsB,EAAeD,EAAM,GAAGlD,GANb,OAQjBuB,EAAKI,MAAQ,CACXC,aACAsB,QACArB,mBACAsB,gBAGF5B,EAAKuB,qBAAuBvB,EAAK2E,kBAAkBlH,KAAvBR,OAAAsG,EAAA,EAAAtG,QAAAsG,EAAA,EAAAtG,CAAA+C,KAC5BA,EAAKuC,iBAAmBvC,EAAK4E,cAAcnH,KAAnBR,OAAAsG,EAAA,EAAAtG,QAAAsG,EAAA,EAAAtG,CAAA+C,KACxBA,EAAKwB,kBAAoBxB,EAAK6E,eAAepH,KAApBR,OAAAsG,EAAA,EAAAtG,QAAAsG,EAAA,EAAAtG,CAAA+C,KACzBA,EAAKwC,cAAgBxC,EAAK8E,WAAWrH,KAAhBR,OAAAsG,EAAA,EAAAtG,QAAAsG,EAAA,EAAAtG,CAAA+C,KACrBA,EAAK6D,iBAAmB7D,EAAK+E,cAActH,KAAnBR,OAAAsG,EAAA,EAAAtG,QAAAsG,EAAA,EAAAtG,CAAA+C,KAnBPA,iFAsBDvB,GAChB,IACMuG,EADQpF,EAAKlC,MAAMgH,OAAO,SAAArC,GAAI,OAAIA,EAAKxC,aAAepB,IACnC,IAAM,GAE/BtB,KAAKqD,SAAS,CACZF,iBAAkB7B,EAClBmD,aAAcoD,EAAWvG,4CAIdwG,GACb,IAAMC,EAAc1F,EAAS1B,IAAImH,GACjC9H,KAAKqD,SAAS,CACZH,WAAYb,EAAS9B,MACrB4C,iBAAkB4E,EAAYzG,wCAIvBoB,EAAYsF,GACrB,IAAMC,EAAYnI,OAAO6B,OAAO,GAAI,CAAEe,cAAcsF,GAC9CE,EAAUzF,EAAK9B,IAAIsH,GAEzBjI,KAAKqD,SAAS,CACZmB,MAAO/B,EAAKlC,MACZkE,aAAcyD,EAAQ5G,2CAIZ6G,GAAwB,IAAhBC,EAAgBzI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAC1BsI,EAAYnI,OAAO6B,OAAO,CAAEL,GAAI6G,GAAUC,GAChD3F,EAAK5B,OAAOoH,GACZjI,KAAKqD,SAAS,CACZmB,MAAO/B,EAAKlC,gDAKd,IAAMkE,EAAezE,KAAKiD,MAAMwB,aAChC,OAAOhC,EAAKhC,KAAKgE,4CAIjB,IAAMtB,EAAmBnD,KAAKiD,MAAME,iBACpC,OAAOV,EAAKlC,MAAMgH,OAAO,SAAArC,GAAI,OAAIA,EAAKxC,aAAeS,0CAGzC7B,GACZtB,KAAKqD,SAAS,CAAEoB,aAAcnD,qCAI9B,OACEqC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACwE,EAAD,CACEnF,WAAYlD,KAAKiD,MAAMC,WACvBC,iBAAkBnD,KAAKiD,MAAME,iBAC7BiB,qBAAsBpE,KAAKoE,qBAC3BC,kBAAmBrE,KAAKqE,oBAE1BV,EAAAC,EAAAC,cAACyE,EAAD,CACE9D,MAAOxE,KAAKuI,iBACZpF,iBAAkBnD,KAAKiD,MAAME,iBAC7BsB,aAAczE,KAAKiD,MAAMwB,aACzBW,iBAAkBpF,KAAKoF,iBACvBC,cAAerF,KAAKqF,gBAEtB1B,EAAAC,EAAAC,cAAC2E,EAAD,CACEtD,KAAMlF,KAAKyI,gBACX/B,iBAAkB1G,KAAK0G,2BA3FfpC,aCHEoE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAOrF,EAAAC,EAAAC,cAACoF,EAAD,MAASC,SAASC,eAAe,SDmH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.7debfd3b.chunk.js","sourcesContent":["/**\n * Base Model for collections\n * - Roughly based off Rails concept of data models\n */\nexport class Model {\n  constructor(props = {}) {\n    this._initializeCollection(props.collection)\n    this.defaults = this._copy(props.defaults)\n\n    this.length = this._onGetLength.bind(this)\n    this.all = this._onGetAll.bind(this)\n    this.find = this._onFind.bind(this)\n    this.add = this._onAdd.bind(this)\n    this.update = this._onUpdate.bind(this)\n  }\n\n  _initializeCollection(collection = []) {\n    this.collection = this._copy(collection)\n  }\n\n  // quick copies arrays/objects\n  _copy(obj = {}) {\n    return JSON.parse(JSON.stringify(obj))\n  }\n\n  _onGetAll() {\n    return this._copy(this.collection)\n  }\n\n  _onGetLength() {\n    return this.collection.length\n  }\n\n  /**\n   * takes an ID and returns the first model that matches\n   * TODO: refine and allow search by params\n   */\n  _onFind(id) {\n    const model = this.collection.find(model => model.id === id)\n    return model ? this._copy(model) : undefined\n  }\n\n  /**\n   * Adds a new object to the collection\n   * Returns the new item, with defaults added\n   */\n  _onAdd(attrs = {}) {\n    const newAttrs = [\n      attrs,\n      this.defaults,\n      { id: this._getNewId() }\n    ]\n\n    const newModel = Object.assign(...newAttrs)\n    this.collection.push(newModel)\n    return this._copy(newModel)\n  }\n\n  /**\n   * Updates a model in the collection\n   * Attributes must include model id\n   */\n  _onUpdate(attrs = {}) {\n    const modelId = attrs.id\n    if (!attrs.id) return \n\n    // going to create a new collection to track mutations\n    // not entirely sure if this will be necessary.. but..\n    const newCollection = this._copy(this.collection)\n    let model = newCollection.find(model => model.id === modelId)\n    if (!model) return\n\n    model = Object.assign(model, attrs)\n    this.collection = newCollection\n    return this._copy(model)\n  }\n\n  _getNewId() {\n    const maxId = this.collection.reduce((max, next) => {\n      return Math.max(max, next.id)\n    }, 0)\n    return maxId + 1\n  }\n}","import { Model } from './lib/Model'\nimport { cards, categories } from './seeds'\n\nexport const Category = new Model({\n  collection: categories,\n  defaults: {\n    name: 'New Category',\n    description: 'This is a new Category',\n    color: 'red',\n  }\n})\n\nexport const Card = new Model({\n  collection: cards,\n  defaults: {\n    name: 'New Card',\n    description: 'This is a new card',\n    text: 'Insert text here' \n  }\n})","export const cards = [\n  {\n    id: 1,\n    categoryId: 1,\n    name: 'Allan Goode',\n    description: `Generally a good guy who's done amazing heroics`,\n    text: `Born in a small village, blah blah blah blah`,\n  },\n  {\n    id: 2,\n    categoryId: 1,\n    name: 'Jerry Smith',\n    description: 'Yawn',\n    text: 'Lorem ipsum blah blah blah'\n  },\n  {\n    id: 3,\n    categoryId: 1,\n    name: 'Mike Truck',\n    description: 'Built like a truck',\n    text: 'Part man, part car'\n  },\n  {\n    id: 4,\n    categoryId: 2,\n    name: 'Riverbend',\n    description: 'Small river fishing village',\n    text: `The birthplace of Allan Goode, this is blah blah blah`\n  },\n  {\n    id: 5,\n    categoryId: 2,\n    name: 'Rocksville',\n    description: 'Mining camp',\n    text: 'hi ho hi ho'\n  }\n]\n\nexport const categories = [\n  {\n    id: 1,\n    name: 'Character',\n    description: 'A list of major and minor characters',\n    color: 'red',\n  },\n  {\n    id: 2,\n    name: 'Location',\n    description: 'Noteworthy locations',\n    color: 'green',\n  }\n]","import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nclass CategoryList extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      categories: props.categories,\n      activeCategoryId: props.activeCategoryId\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.activeCategoryId !== this.props.activeCategoryId) {\n      this.setState({ activeCategoryId: nextProps.activeCategoryId })\n    }\n\n    // TODO: add better comparison\n    if (nextProps.categories !== this.props.categories) {\n      this.setState({ categories: nextProps.categories })\n    }\n  }\n\n  render() {\n    const categories = this.state.categories.map(category => {\n      const isActive = category.id === this.state.activeCategoryId\n      const editIcon = (\n        <span className='edit-button'>\n          <FontAwesomeIcon icon={['far', 'edit']} />\n        </span>\n      )\n\n      let className = 'name'\n      if (isActive) className += ' active'\n\n      const categoryName = (\n        <span\n          className={className}\n          alt={isActive ? 'Active Category' : ''}\n          onClick={() => this.props.handleChangeCategory(category.id)}\n        >\n          {category.name}\n        </span>\n      )\n\n      return (\n        <li\n          key={category.id}\n        >\n          {categoryName}\n          {editIcon}\n        </li>\n      )\n    })\n\n    return (\n      <nav className=\"category-list list-container\">\n        <ul>\n          { categories }\n          <li \n            className='add-button'\n            key='addCategory'\n            onClick={() => this.props.handleAddCategory()}\n          >\n            <FontAwesomeIcon icon={['far', 'plus-square']} />\n          </li>\n        </ul>\n      </nav>\n    )\n  }\n}\n\nexport default CategoryList","import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nclass CardList extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      cards: props.cards,\n      activeCardId: props.activeCardId,\n      activeCategoryId: props.activeCategoryId\n    }\n  }\n\n  componentDidMount() {\n    this.setStateDelayed({ show: true })\n  }\n\n  componentWillUnmount() {\n    this.clearTimeout()\n  }\n\n  clearTimeout() {\n    if (this.timeOut) {\n      clearTimeout(this.timeOut)\n    }\n  }\n\n  setStateDelayed(newState, delay = 300) {\n    this.timeOut = setTimeout(() => {\n      this.setState(newState)\n    }, delay)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.activeCategoryId !== this.props.activeCategoryId) {\n      this.setState({ activeCategoryId: nextProps.activeCategoryId})\n    }\n\n    if (JSON.stringify(nextProps.cards) !== JSON.stringify(this.props.cards)) {\n      this.clearTimeout()\n      this.setState({ show: false })\n      this.setStateDelayed({\n        cards: nextProps.cards,\n        show: true,\n        activeCardId: nextProps.activeCardId\n      })\n    } else if (nextProps.activeCardId !== this.props.activeCardId) {\n      this.setState({ activeCardId: nextProps.activeCardId })\n    }\n  }\n\n  // TODO: refactor some of this into functional components\n  render() {\n    const cards = this.state.cards.map(card => {\n      const isActive = card.id === this.state.activeCardId\n\n      const editIcon = (\n        <span className='edit-button'>\n          <FontAwesomeIcon icon={['far', 'edit']} />\n        </span>\n      )\n\n      let className = 'name'\n      if (isActive) className += ' active'\n\n      const cardName = (\n        <span\n          className={className}\n          alt={isActive ? 'Active Card' : ''}\n          onClick={() => this.props.handleChangeCard(card.id)}\n        >\n          {card.name}\n        </span>\n      )\n\n      return (\n        <li\n          key={card.id}\n        >\n          {cardName}\n          {editIcon}\n        </li>\n      )\n    })\n\n    let className = `card-list list-container`\n    if (this.state.show) className += ` show`\n\n    return (\n      <nav className={className}>\n        <ul>\n          { cards }\n          <li \n            className='add-button'\n            key='addCard'\n            onClick={() => this.props.handleAddCard(this.state.activeCategoryId)}\n          >\n            <FontAwesomeIcon icon={['far', 'plus-square']} />\n          </li>\n        </ul>\n      </nav>\n    )\n  }\n}\n\nexport default CardList","import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport class CancelConfirmButton extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      show: props.show || false,\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.show !== this.props.show) {\n      this.setState({ show: nextProps.show })\n    }\n  }\n\n  render() {\n    let className = 'cancel-confirm'\n    if (this.state.show) className += ' show'\n\n    return (\n      <span className={className}>\n        <span\n          className='cancel-button button'\n          onClick={() => this.props.handleClickCancel()}\n        >\n          <FontAwesomeIcon icon={['far', 'times-circle']} />\n        </span>\n\n        <span\n          className='confirm-button button'\n          onClick={() => this.props.handleClickConfirm()}\n        >\n          <FontAwesomeIcon icon={['far', 'check-circle']} />\n        </span>\n      </span>\n    )\n  }\n}","import React, { Component } from 'react'\nimport { CancelConfirmButton } from './CancelConfirmButton'\n\nexport default class CardEditor extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      card: props.card,\n      isNameFocused: false,\n      nameKey: Math.random() // can force rerender after user updates content\n    }\n    this.nameInput = React.createRef();\n    this.handleChangeNameFocus = this._onChangeNameFocus.bind(this)\n    this.handleClickCancel = this._onClickCancel.bind(this)\n    this.handleClickConfirm = this._onClickConfirm.bind(this)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.card !== this.props.card) {\n      this.setState({ card: nextProps.card })\n    }\n  }\n\n  _onChangeNameFocus(isNameFocused) {\n    this.setState({ isNameFocused })\n\n    if (isNameFocused) {\n      // workaround to auto-focus to newly-contentEditable element\n      setTimeout(() => {\n        this.nameInput.current.focus()\n      },0)\n    }\n  }\n\n  _onClickCancel() {\n    this.setState({ nameKey: Math.random() })\n    this.handleChangeNameFocus(false)\n  }\n\n  _onClickConfirm() {\n    this.handleChangeNameFocus(false)\n    const name = this.nameInput.current.innerText || 'Untitled'\n    this.props.handleUpdateCard(this.state.card.id, { name })\n  }\n\n  render() {\n    const card = this.state.card\n    if (!card) {\n      return null\n    }\n\n    let cardNameClass = 'card-name'\n    if (this.state.isNameFocused) cardNameClass += ' focus'\n\n    return (\n      <article className=\"card-container\">\n        <header>\n          <h1\n            ref={this.nameInput}\n            key={this.state.nameKey}\n            className={cardNameClass}\n            onClick={() => this.handleChangeNameFocus(true)}\n            contentEditable={this.state.isNameFocused}\n            autoFocus={this.stateisNameFocused}\n          >\n            {card.name}\n          </h1>\n          <CancelConfirmButton\n            show={this.state.isNameFocused}\n            handleClickCancel={() => this.handleClickCancel()}\n            handleClickConfirm={() => this.handleClickConfirm()}\n          />\n        </header>\n\n        <section>\n          <label htmlFor=\"card-description\">Summary</label>\n          <div className=\"card-description\">{card.description}</div>\n        </section>\n\n        <main>\n          <label htmlFor=\"card-text\">Notes</label>\n          <div className=\"card-text\">{card.text}</div>\n        </main>\n      </article>\n    )\n  }\n}","import React, { Component } from 'react'\nimport './App.scss'\n\nimport { Category, Card } from './models'\nimport { CategoryList, CardList, CardEditor } from './components'\n\n// TODO: reduce glut once I know which icons I need\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fas } from '@fortawesome/free-solid-svg-icons'\nimport { far } from '@fortawesome/free-regular-svg-icons'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nlibrary.add(fas, far, fab)\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    const categories = Category.all()\n    const activeCategoryId = categories[0].id\n    const cards = Card.all().filter(card => card.categoryId === activeCategoryId)\n    const activeCardId = cards[0].id\n    \n    this.state = { \n      categories,\n      cards,\n      activeCategoryId,\n      activeCardId,\n    }\n\n    this.handleChangeCategory = this._onChangeCategory.bind(this)\n    this.handleChangeCard = this._onChangeCard.bind(this)\n    this.handleAddCategory = this._onAddCategory.bind(this)\n    this.handleAddCard = this._onAddCard.bind(this);\n    this.handleUpdateCard = this._onUpdateCard.bind(this);\n  }\n\n  _onChangeCategory(id) {\n    const cards = Card.all().filter(card => card.categoryId === id)\n    const activeCard = cards[0] || {}\n\n    this.setState({\n      activeCategoryId: id,\n      activeCardId: activeCard.id\n    })\n  }\n\n  _onAddCategory(categoryInfo) {\n    const newCategory = Category.add(categoryInfo)\n    this.setState({\n      categories: Category.all(),\n      activeCategoryId: newCategory.id\n    })\n  }\n\n  _onAddCard(categoryId, cardInfo) {\n    const newParams = Object.assign({}, { categoryId }, cardInfo)\n    const newCard = Card.add(newParams)\n\n    this.setState({\n      cards: Card.all(),\n      activeCardId: newCard.id\n    })\n  }\n\n  _onUpdateCard(cardId, newValues = {}) {\n    const newParams = Object.assign({ id: cardId }, newValues)\n    Card.update(newParams)\n    this.setState({\n      cards: Card.all()\n    })\n  }\n\n  getActiveCard() {\n    const activeCardId = this.state.activeCardId\n    return Card.find(activeCardId)\n  }\n\n  getActiveCards() {\n    const activeCategoryId = this.state.activeCategoryId\n    return Card.all().filter(card => card.categoryId === activeCategoryId)\n  }\n\n  _onChangeCard(id) {\n    this.setState({ activeCardId: id })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CategoryList\n          categories={this.state.categories}\n          activeCategoryId={this.state.activeCategoryId}\n          handleChangeCategory={this.handleChangeCategory}\n          handleAddCategory={this.handleAddCategory}\n        />\n        <CardList\n          cards={this.getActiveCards()} // TODO: I don't think this works right\n          activeCategoryId={this.state.activeCategoryId}\n          activeCardId={this.state.activeCardId}\n          handleChangeCard={this.handleChangeCard}\n          handleAddCard={this.handleAddCard}\n        />\n        <CardEditor\n          card={this.getActiveCard()} // TODO: make more better\n          handleUpdateCard={this.handleUpdateCard}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available please refresh.\" message in your web app.\n              console.log('New content is available please refresh.')\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}