{"version":3,"sources":["components/pages/Login.js","models/lib/Model.js","models/index.js","models/seeds.js","components/lib/CardListItem.js","components/lib/CardList.js","components/lib/CancelConfirmButton.js","components/lib/MicroEditor.js","components/lib/CategoryListItem.js","components/lib/CategoryList.js","components/lib/CardEditor.js","components/pages/Main.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","email","password","handleChange","_onChange","bind","assertThisInitialized","handleSubmit","_onSubmit","event","target","key","getAttribute","value","setState","defineProperty","preventDefault","alert","JSON","stringify","react_default","a","createElement","className","onSubmit","type","data-state-field","onChange","Component","Model","arguments","length","undefined","_initializeCollection","collection","defaults","freeze","_onGetLength","all","_onGetAll","findById","_onFindById","findWhere","_onFindWhere","add","_onAdd","update","_onUpdate","createClass","_copy","obj","parse","id","model","find","query","keys","forEach","param","filter","item","attrs","newAttrs","_getNewId","newModel","assign","apply","push","modelId","newCollection","reduce","max","next","Math","Category","name","description","color","Card","categoryId","text","CardListItem","isActive","alt","onClick","handleChangeCard","card","CardList","cards","activeCardId","activeCategoryId","setStateDelayed","show","clearTimeout","timeOut","newState","_this2","delay","setTimeout","nextProps","_this3","map","handleAddCard","index_es","icon","CancelConfirmButton","_Component","inherits","handleClickCancel","handleClickConfirm","MicroEditor","input","React","createRef","handleChangeActive","_onChangeActive","_onClickCancel","_onClickConfirm","focus","current","innerText","newText","defaultText","inputClass","ref","contentEditable","CancelConfirmButton_CancelConfirmButton","CategoryListItem","isEditor","category","handleClickEdit","_onClickEdit","editIcon","navCategoryName","handleChangeCategory","editCategoryName","MicroEditor_MicroEditor","handleUpdateCategory","categoryName","CategoryList","categories","CategoryListItem_CategoryListItem","handleAddCategory","CardEditor","handleUpdateCard","class","App","_onAddCategory","_onChangeCategory","_onUpdateCategory","_onChangeCard","_onAddCard","_onUpdateCard","activeCard","categoryInfo","newCategory","newValues","newParams","cardInfo","newCard","cardId","lib_CategoryList","lib_CardList","getActiveCards","CardEditor_CardEditor","getActiveCard","library","fas","far","fab","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","Switch","Route","exact","path","component","Main","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mSAEqBA,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,MAAO,GACPC,SAAU,IAGZT,EAAKU,aAAeV,EAAKW,UAAUC,KAAfX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KACpBA,EAAKc,aAAed,EAAKe,UAAUH,KAAfX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KARHA,yEAWTgB,GACR,IAAMC,EAASD,EAAMC,OACfC,EAAMD,EAAOE,aAAa,oBAC1BC,EAAQH,EAAOG,MAErBjB,KAAKkB,SAALpB,OAAAqB,EAAA,EAAArB,CAAA,GACGiB,EAAME,sCAIDJ,GACRA,EAAMO,iBACNC,MAAM,eAAiBC,KAAKC,UAAUvB,KAAKI,yCAK3C,OACEoB,EAAAC,EAAAC,cAAA,OAAKC,UAAY,mBACfH,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,QAAME,SAAU5B,KAAKW,cACnBa,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,QACLZ,MAAOjB,KAAKI,MAAMC,MAClByB,mBAAiB,QACjBC,SAAU/B,KAAKO,gBAGnBiB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACLZ,MAAOjB,KAAKI,MAAME,SAClBwB,mBAAiB,WACjBC,SAAU/B,KAAKO,gBAGnBiB,EAAAC,EAAAC,cAAA,SAAOG,KAAK,SAASZ,MAAM,oBAnDFe,aCEtBC,EAAb,WACE,SAAAA,IAAwB,IAAZrC,EAAYsC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAAIpC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiC,GACtBjC,KAAKqC,sBAAsBzC,EAAM0C,YACjCtC,KAAKuC,SAAWzC,OAAO0C,OAAO5C,EAAM2C,UAEpCvC,KAAKmC,OAASnC,KAAKyC,aAAahC,KAAKT,MACrCA,KAAK0C,IAAM1C,KAAK2C,UAAUlC,KAAKT,MAC/BA,KAAK4C,SAAW5C,KAAK6C,YAAYpC,KAAKT,MACtCA,KAAK8C,UAAY9C,KAAK+C,aAAatC,KAAKT,MACxCA,KAAKgD,IAAMhD,KAAKiD,OAAOxC,KAAKT,MAC5BA,KAAKkD,OAASlD,KAAKmD,UAAU1C,KAAKT,MAVtC,OAAAF,OAAAsD,EAAA,EAAAtD,CAAAmC,EAAA,EAAAlB,IAAA,wBAAAE,MAAA,WAayC,IAAjBqB,EAAiBJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GACjClC,KAAKsC,WAAatC,KAAKqD,MAAMf,KAdjC,CAAAvB,IAAA,QAAAE,MAAA,WAkBkB,IAAVqC,EAAUpB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GACV,OAAOZ,KAAKiC,MAAMjC,KAAKC,UAAU+B,MAnBrC,CAAAvC,IAAA,YAAAE,MAAA,WAuBI,OAAOjB,KAAKqD,MAAMrD,KAAKsC,cAvB3B,CAAAvB,IAAA,eAAAE,MAAA,WA2BI,OAAOjB,KAAKsC,WAAWH,SA3B3B,CAAApB,IAAA,cAAAE,MAAA,SAkCcuC,GACV,IAAMC,EAAQzD,KAAKsC,WAAWoB,KAAK,SAAAD,GAAK,OAAIA,EAAMD,KAAOA,IACzD,OAAOC,EAAQzD,KAAKqD,MAAMI,QAASrB,IApCvC,CAAArB,IAAA,eAAAE,MAAA,WA0C2B,IAAZ0C,EAAYzB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GACfI,EAAatC,KAAK0C,IAAI1C,KAAKsC,YAO/B,OANexC,OAAO8D,KAAKD,GACpBE,QAAQ,SAAAC,GACb,IAAM7C,EAAQ0C,EAAMG,GACpBxB,EAAaA,EAAWyB,OAAO,SAAAC,GAAI,OAAIA,EAAKF,KAAW7C,MAGlDqB,IAlDX,CAAAvB,IAAA,SAAAE,MAAA,WAyDqB,IAAZgD,EAAY/B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GACPgC,EAAW,CACf,GACAlE,KAAKuC,SACL,CAAEiB,GAAIxD,KAAKmE,aACXF,GAGIG,EAAWtE,OAAOuE,OAAPC,MAAAxE,OAAiBoE,GAElC,OADAlE,KAAKsC,WAAWiC,KAAKH,GACdpE,KAAKqD,MAAMe,KAnEtB,CAAArD,IAAA,YAAAE,MAAA,WA0EwB,IAAZgD,EAAY/B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GACVsC,EAAUP,EAAMT,GACtB,GAAKS,EAAMT,GAAX,CAIA,IAAMiB,EAAgBzE,KAAKqD,MAAMrD,KAAKsC,YAClCmB,EAAQgB,EAAcf,KAAK,SAAAD,GAAK,OAAIA,EAAMD,KAAOgB,IACrD,GAAKf,EAIL,OAFAA,EAAQ3D,OAAOuE,OAAOZ,EAAOQ,GAC7BjE,KAAKsC,WAAamC,EACXzE,KAAKqD,MAAMI,MAtFtB,CAAA1C,IAAA,YAAAE,MAAA,WA6FI,OAHcjB,KAAKsC,WAAWoC,OAAO,SAACC,EAAKC,GACzC,OAAOC,KAAKF,IAAIA,EAAKC,EAAKpB,KACzB,GACY,MA7FnBvB,EAAA,GCDa6C,EAAW,IAAI7C,EAAM,CAChCK,WCkCwB,CACxB,CACEkB,GAAI,EACJuB,KAAM,YACNC,YAAa,uCACbC,MAAO,OAET,CACEzB,GAAI,EACJuB,KAAM,WACNC,YAAa,uBACbC,MAAO,UD5CT1C,SAAU,CACRwC,KAAM,eACNC,YAAa,yBACbC,MAAO,SAIEC,EAAO,IAAIjD,EAAM,CAC5BK,WCbmB,CACnB,CACEkB,GAAI,EACJ2B,WAAY,EACZJ,KAAM,cACNC,YAAW,kDACXI,KAAI,gDAEN,CACE5B,GAAI,EACJ2B,WAAY,EACZJ,KAAM,cACNC,YAAa,OACbI,KAAM,8BAER,CACE5B,GAAI,EACJ2B,WAAY,EACZJ,KAAM,aACNC,YAAa,qBACbI,KAAM,sBAER,CACE5B,GAAI,EACJ2B,WAAY,EACZJ,KAAM,YACNC,YAAa,8BACbI,KAAI,yDAEN,CACE5B,GAAI,EACJ2B,WAAY,EACZJ,KAAM,aACNC,YAAa,cACbI,KAAM,gBDpBR7C,SAAU,CACRwC,KAAM,WACNC,YAAa,qBACbI,KAAM,8BEfK,SAASC,EAAazF,GACnC,IAAI+B,EAAY,OAGhB,OAFI/B,EAAM0F,WAAU3D,GAAa,WAG/BH,EAAAC,EAAAC,cAAA,QACEC,UAAWA,EACX4D,IAAK3F,EAAM0F,SAAW,cAAgB,GACtCE,QAAS,kBAAM5F,EAAM6F,iBAAiB7F,EAAM8F,KAAKlC,MAEhD5D,EAAM8F,KAAKX,UC4EHY,cAnFb,SAAAA,EAAY/F,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2F,IACjB9F,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6F,GAAAxF,KAAAH,KAAMJ,KACDQ,MAAQ,CACXwF,MAAOhG,EAAMgG,MACbC,aAAcjG,EAAMiG,aACpBC,iBAAkBlG,EAAMkG,kBALTjG,mFAUjBG,KAAK+F,gBAAgB,CAAEC,MAAM,mDAI7BhG,KAAKiG,mKAIDjG,KAAKkG,SACPD,aAAajG,KAAKkG,kDAINC,GAAuB,IAAAC,EAAApG,KAAbqG,EAAanE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAL,IAChClC,KAAKkG,QAAUI,WAAW,WACxBF,EAAKlF,SAASiF,IACbE,qDAGqBE,GACpBA,EAAUT,mBAAqB9F,KAAKJ,MAAMkG,kBAC5C9F,KAAKkB,SAAS,CAAE4E,iBAAkBS,EAAUT,mBAG1CxE,KAAKC,UAAUgF,EAAUX,SAAWtE,KAAKC,UAAUvB,KAAKJ,MAAMgG,QAChE5F,KAAKiG,eACLjG,KAAKkB,SAAS,CAAE8E,MAAM,IACtBhG,KAAK+F,gBAAgB,CACnBH,MAAOW,EAAUX,MACjBI,MAAM,EACNH,aAAcU,EAAUV,gBAEjBU,EAAUV,eAAiB7F,KAAKJ,MAAMiG,cAC/C7F,KAAKkB,SAAS,CAAE2E,aAAcU,EAAUV,gDAKnC,IAAAW,EAAAxG,KACD4F,EAAQ5F,KAAKI,MAAMwF,MAAMa,IAAI,SAAAf,GACjC,OACElE,EAAAC,EAAAC,cAAA,MACEX,IAAK2E,EAAKlC,IAEVhC,EAAAC,EAAAC,cAAC2D,EAAD,CACEC,SAAUI,EAAKlC,KAAOgD,EAAKpG,MAAMyF,aACjCJ,iBAAkBe,EAAK5G,MAAM6F,iBAC7BC,KAAMA,OAMV/D,EAAS,2BAGb,OAFI3B,KAAKI,MAAM4F,OAAMrE,GAAS,SAG5BH,EAAAC,EAAAC,cAAA,OAAKC,UAAWA,GACdH,EAAAC,EAAAC,cAAA,UACIkE,EACFpE,EAAAC,EAAAC,cAAA,MACEC,UAAU,aACVZ,IAAI,UACJyE,QAAS,kBAAMgB,EAAK5G,MAAM8G,cAAcF,EAAKpG,MAAM0F,oBAEnDtE,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAiBC,KAAM,CAAC,MAAO,2BA5EpB5E,aCDV6E,EAAb,SAAAC,GACE,SAAAD,EAAYjH,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6G,IACjBhH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+G,GAAA1G,KAAAH,KAAMJ,KACDQ,MAAQ,CACX4F,KAAMpG,EAAMoG,OAAQ,GAHLnG,EADrB,OAAAC,OAAAiH,EAAA,EAAAjH,CAAA+G,EAAAC,GAAAhH,OAAAsD,EAAA,EAAAtD,CAAA+G,EAAA,EAAA9F,IAAA,4BAAAE,MAAA,SAQ4BsF,GACpBA,EAAUP,OAAShG,KAAKJ,MAAMoG,MAChChG,KAAKkB,SAAS,CAAE8E,KAAMO,EAAUP,SAVtC,CAAAjF,IAAA,SAAAE,MAAA,WAcW,IAAAmF,EAAApG,KACH2B,EAAY,iBAGhB,OAFI3B,KAAKI,MAAM4F,OAAMrE,GAAa,SAGhCH,EAAAC,EAAAC,cAAA,QAAMC,UAAWA,GACfH,EAAAC,EAAAC,cAAA,QACEC,UAAU,uBACV6D,QAAS,kBAAMY,EAAKxG,MAAMoH,sBAE1BxF,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAiBC,KAAM,CAAC,MAAO,mBAGjCpF,EAAAC,EAAAC,cAAA,QACEC,UAAU,wBACV6D,QAAS,kBAAMY,EAAKxG,MAAMqH,uBAE1BzF,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAiBC,KAAM,CAAC,MAAO,wBA/BzCC,EAAA,CAAyC7E,aCApBkF,cACnB,SAAAA,EAAYtH,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkH,IACjBrH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoH,GAAA/G,KAAAH,KAAMJ,KACDQ,MAAQ,CACXgF,KAAMxF,EAAMwF,KACZE,SAAU1F,EAAM0F,WAAY,GAE9BzF,EAAKsH,MAAQC,IAAMC,YACnBxH,EAAKyH,mBAAqBzH,EAAK0H,gBAAgB9G,KAArBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAC1BA,EAAKmH,kBAAoBnH,EAAK2H,eAAe/G,KAApBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KACzBA,EAAKoH,mBAAqBpH,EAAK4H,gBAAgBhH,KAArBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KATTA,yFAYO0G,GACpBA,EAAUnB,OAASpF,KAAKJ,MAAMwF,MAChCpF,KAAKkB,SAAS,CAAEkE,KAAMmB,EAAUnB,mDAK9BpF,KAAKI,MAAMkF,UAAUtF,KAAK0H,gDAGhBpC,GACdtF,KAAKkB,SAAS,CAAEoE,aACZA,GAAUtF,KAAK0H,wCAGb,IAAAtB,EAAApG,KAENsG,WAAW,WACTF,EAAKe,MAAMQ,QAAQD,SACnB,4CAIF1H,KAAKmH,MAAMQ,QAAQC,UAAY5H,KAAKI,MAAMgF,KAC1CpF,KAAKsH,oBAAmB,GACpBtH,KAAKJ,MAAMoH,mBAAmBhH,KAAKJ,MAAMoH,8DAI7ChH,KAAKsH,oBAAmB,GACxB,IAAMO,EAAU7H,KAAKmH,MAAMQ,QAAQC,WAAa5H,KAAKJ,MAAMkI,YAC3D9H,KAAKJ,MAAMqH,mBAAmBY,oCAGvB,IAAArB,EAAAxG,KACDoF,EAAOpF,KAAKI,MAAMgF,MAAQpF,KAAKJ,MAAMkI,YACvCC,EAAa,SAGjB,OAFI/H,KAAKI,MAAMkF,WAAUyC,GAAc,UAGrCvG,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBACdH,EAAAC,EAAAC,cAAA,QACEsG,IAAKhI,KAAKmH,MACVxF,UAAWoG,EACXvC,QAAS,kBAAMgB,EAAKc,oBAAmB,IACvCW,gBAAiBjI,KAAKI,MAAMkF,UAE3BF,GAEH5D,EAAAC,EAAAC,cAACwG,EAAD,CACElC,KAAMhG,KAAKI,MAAMkF,SACjB0B,kBAAmB,kBAAMR,EAAKQ,qBAC9BC,mBAAoB,kBAAMT,EAAKS,gCAjEAjF,aCCpBmG,cACnB,SAAAA,EAAYvI,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmI,IACjBtI,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqI,GAAAhI,KAAAH,KAAMJ,KACDQ,MAAQ,CACXkF,SAAU1F,EAAM0F,SAChB8C,UAAU,EACVC,SAAUzI,EAAMyI,UAGlBxI,EAAKyI,gBAAkBzI,EAAK0I,aAAa9H,KAAlBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KACvBA,EAAKmH,kBAAoBnH,EAAK2H,eAAe/G,KAApBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KATRA,yFAYO0G,GACpBvG,KAAKI,MAAMiI,WAAa9B,EAAU8B,UACpCrI,KAAKkB,SAAS,CAAEmH,SAAU9B,EAAU8B,WAElCrI,KAAKI,MAAMkF,WAAaiB,EAAUjB,UACpCtF,KAAKkB,SAAS,CAAEoE,SAAUiB,EAAUjB,kDAKtCtF,KAAKkB,SAAS,CAAEkH,UAAU,6CAI1BpI,KAAKkB,SAAS,CAAEkH,UAAU,qCAGnB,IAAAhC,EAAApG,KACDqI,EAAWrI,KAAKI,MAAMiI,SACtB/C,EAAWtF,KAAKI,MAAMkF,SACtB8C,EAAWpI,KAAKI,MAAMgI,SAEtBI,EACJhH,EAAAC,EAAAC,cAAA,QACEC,UAAU,cACV6D,QAASxF,KAAKsI,iBAEd9G,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAiBC,KAAM,CAAC,MAAO,WAI/BjF,EAAY,OACZ2D,IAAU3D,GAAa,WAE3B,IAAM8G,EACJjH,EAAAC,EAAAC,cAAA,QACEC,UAAWA,EACX4D,IAAKD,EAAW,kBAAoB,GACpCE,QAAS,kBAAMY,EAAKxG,MAAM8I,qBAAqBL,EAAS7E,MAEvD6E,EAAStD,MAIR4D,EACJnH,EAAAC,EAAAC,cAACkH,EAAD,CACExD,KAAMiD,EAAStD,KACf+C,YAAY,WACZd,kBAAmBhH,KAAKgH,kBACxBC,mBAAoB,SAAAlC,GAClBqB,EAAKlF,SAAS,CAAEkH,UAAU,IAC1BhC,EAAKxG,MAAMiJ,qBAAqBR,EAAS7E,GAAI,CAAEuB,UAEjDO,UAAU,IAIRwD,EAAeV,EAAWO,EAAmBF,EAEnD,OACEjH,EAAAC,EAAAC,cAAA,MAAIX,IAAKsH,EAAS7E,IACfsF,EACAV,EAAW,GAAKI,UA3EqBxG,aCiD/B+G,cAhDb,SAAAA,EAAYnJ,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+I,IACjBlJ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiJ,GAAA5I,KAAAH,KAAMJ,KACDQ,MAAQ,CACX4I,WAAYpJ,EAAMoJ,WAClBlD,iBAAkBlG,EAAMkG,kBAJTjG,yFAQO0G,GACpBA,EAAUT,mBAAqB9F,KAAKJ,MAAMkG,kBAC5C9F,KAAKkB,SAAS,CAAE4E,iBAAkBS,EAAUT,mBAI1CS,EAAUyC,aAAehJ,KAAKJ,MAAMoJ,YACtChJ,KAAKkB,SAAS,CAAE8H,WAAYzC,EAAUyC,8CAIjC,IAAA5C,EAAApG,KACDgJ,EAAahJ,KAAKI,MAAM4I,WAAWvC,IAAI,SAAA4B,GAC3C,OACE7G,EAAAC,EAAAC,cAACuH,EAAD,CACEZ,SAAUA,EACV/C,SAAU+C,EAAS7E,KAAO4C,EAAKhG,MAAM0F,iBACrC4C,qBAAsBtC,EAAKxG,MAAM8I,qBACjCG,qBAAsBzC,EAAKxG,MAAMiJ,yBAKvC,OACErH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACbH,EAAAC,EAAAC,cAAA,UACIsH,EACFxH,EAAAC,EAAAC,cAAA,MACEC,UAAU,aACVZ,IAAI,cACJyE,QAAS,kBAAMY,EAAKxG,MAAMsJ,sBAE1B1H,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAiBC,KAAM,CAAC,MAAO,2BAzChB5E,aCDNmH,cACnB,SAAAA,EAAYvJ,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmJ,IACjBtJ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqJ,GAAAhJ,KAAAH,KAAMJ,KACDQ,MAAQ,CAAEsF,KAAM9F,EAAM8F,MAFV7F,yFAKO0G,GACpBA,EAAUb,OAAS1F,KAAKJ,MAAM8F,MAChC1F,KAAKkB,SAAS,CAAEwE,KAAMa,EAAUb,wCAI3B,IAAAU,EAAApG,KACD0F,EAAO1F,KAAKI,MAAMsF,KACxB,OAAKA,EAKHlE,EAAAC,EAAAC,cAAA,WAASC,UAAU,kBACjBH,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACZH,EAAAC,EAAAC,cAACkH,EAAD,CACExD,KAAMM,EAAKX,KACX+C,YAAY,WACZb,mBAAoB,SAAAlC,GAClBqB,EAAKxG,MAAMwJ,iBAAiB1D,EAAKlC,GAAI,CAAEuB,cAM/CvD,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,UAAQ2H,MAAM,uBAAd,WAGA7H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAACkH,EAAD,CACExD,KAAMM,EAAKV,YACX8C,YAAY,mBACZb,mBAAoB,SAAAjC,GAClBoB,EAAKxG,MAAMwJ,iBAAiB1D,EAAKlC,GAAI,CAAEwB,qBAM/CxD,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,UAAQ2H,MAAM,uBAAd,SAGA7H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACkH,EAAD,CACExD,KAAMM,EAAKN,KACX0C,YAAY,oBACZb,mBAAoB,SAAA7B,GAClBgB,EAAKxG,MAAMwJ,iBAAiB1D,EAAKlC,GAAI,CAAE4B,eAzC1C,YAf2BpD,aC6GzBsH,cA3Gb,SAAAA,EAAY1J,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsJ,GACjBzJ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwJ,GAAAnJ,KAAAH,KAAMJ,IAEN,IAAMoJ,EAAalE,EAASpC,MACtBoD,EAAmBkD,EAAW,GAAGxF,GACjCoC,EAAQV,EAAKpC,UAAU,CAAEqC,WAAYW,IACrCD,EAAeD,EAAM,GAAGpC,GANb,OAQjB3D,EAAKO,MAAQ,CACX4I,aACApD,QACAE,mBACAD,gBAGFhG,EAAKqJ,kBAAoBrJ,EAAK0J,eAAe9I,KAApBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KACzBA,EAAK6I,qBAAuB7I,EAAK2J,kBAAkB/I,KAAvBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAC5BA,EAAKgJ,qBAAuBhJ,EAAK4J,kBAAkBhJ,KAAvBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAC5BA,EAAK4F,iBAAmB5F,EAAK6J,cAAcjJ,KAAnBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KACxBA,EAAK6G,cAAgB7G,EAAK8J,WAAWlJ,KAAhBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KACrBA,EAAKuJ,iBAAmBvJ,EAAK+J,cAAcnJ,KAAnBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KApBPA,iFAuBD2D,GAChB,IACMqG,EADQ3E,EAAKpC,UAAU,CAAEqC,WAAY3B,IAClB,IAAM,GAE/BxD,KAAKkB,SAAS,CACZ4E,iBAAkBtC,EAClBqC,aAAcgE,EAAWrG,4CAIdsG,GACb,IAAMC,EAAcjF,EAAS9B,IAAI8G,GACjC9J,KAAKkB,SAAS,CACZ8H,WAAYlE,EAASpC,MACrBoD,iBAAkBiE,EAAYvG,+CAIhB2B,GAA4B,IAAhB6E,EAAgB9H,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAClC+H,EAAYnK,OAAOuE,OAAO,CAAEb,GAAI2B,GAAc6E,GACpDlF,EAAS5B,OAAO+G,GAChBjK,KAAKkB,SAAS,CACZ8H,WAAYlE,EAASpC,2CAIdyC,EAAY+E,GACrB,IAAMD,EAAYnK,OAAOuE,OAAO,GAAI,CAAEc,cAAc+E,GAC9CC,EAAUjF,EAAKlC,IAAIiH,GAEzBjK,KAAKkB,SAAS,CACZ0E,MAAOV,EAAKxC,MACZmD,aAAcsE,EAAQ3G,2CAIZ4G,GAAwB,IAAhBJ,EAAgB9H,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAC1B+H,EAAYnK,OAAOuE,OAAO,CAAEb,GAAI4G,GAAUJ,GAChD9E,EAAKhC,OAAO+G,GACZjK,KAAKkB,SAAS,CACZ0E,MAAOV,EAAKxC,gDAKd,IAAMmD,EAAe7F,KAAKI,MAAMyF,aAChC,OAAOX,EAAKtC,SAASiD,4CAIrB,IAAMC,EAAmB9F,KAAKI,MAAM0F,iBACpC,OAAOZ,EAAKpC,UAAU,CAAEqC,WAAYW,0CAGxBtC,GACZxD,KAAKkB,SAAS,CAAE2E,aAAcrC,qCAI9B,OACEhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC2I,EAAD,CACErB,WAAYhJ,KAAKI,MAAM4I,WACvBlD,iBAAkB9F,KAAKI,MAAM0F,iBAC7B4C,qBAAsB1I,KAAK0I,qBAC3BQ,kBAAmBlJ,KAAKkJ,kBACxBL,qBAAsB7I,KAAK6I,uBAE7BrH,EAAAC,EAAAC,cAAC4I,EAAD,CACE1E,MAAO5F,KAAKuK,iBACZzE,iBAAkB9F,KAAKI,MAAM0F,iBAC7BD,aAAc7F,KAAKI,MAAMyF,aACzBJ,iBAAkBzF,KAAKyF,iBACvBiB,cAAe1G,KAAK0G,gBAEtBlF,EAAAC,EAAAC,cAAC8I,EAAD,CACE9E,KAAM1F,KAAKyK,gBACXrB,iBAAkBpJ,KAAKoJ,2BArGfpH,6CCOlB0I,IAAQ1H,IAAI2H,IAAKC,IAAKC,iBCDFC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCRNC,IAASC,OACP5J,EAAAC,EAAAC,cAAC2J,EAAA,EAAD,KACE7J,EAAAC,EAAAC,cFGW,WACb,OACEF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAC4J,EAAA,EAAD,KACE9J,EAAAC,EAAAC,cAAC6J,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjCnK,EAAAC,EAAAC,cAAC6J,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAW/L,IAChC6B,EAAAC,EAAAC,cAAC6J,EAAA,EAAD,CAAOG,UAAWC,OETtB,OAEDC,SAASC,eAAe,SD6GrB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.571669b1.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      email: '',\n      password: ''\n    }\n\n    this.handleChange = this._onChange.bind(this)\n    this.handleSubmit = this._onSubmit.bind(this)\n  }\n\n  _onChange(event) {\n    const target = event.target\n    const key = target.getAttribute('data-state-field')\n    const value = target.value\n\n    this.setState({\n      [key]: value\n    })\n  }\n\n  _onSubmit(event) {\n    event.preventDefault()\n    alert('Log in for: ' + JSON.stringify(this.state))\n  }\n  \n\n  render() {\n    return (\n      <div className = 'login-container'>\n        <h1>Login</h1>\n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label>email</label>\n            <input \n              type=\"email\" \n              value={this.state.email} \n              data-state-field=\"email\" \n              onChange={this.handleChange}\n            />\n          </div>\n          <div>\n            <label>password</label>\n            <input \n              type=\"text\" \n              value={this.state.password} \n              data-state-field=\"password\" \n              onChange={this.handleChange}\n            />\n          </div>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    )\n  }\n}","/**\n * Base Model for collections\n * - Roughly based off Rails activerecords\n */\nexport class Model {\n  constructor(props = {}) {\n    this._initializeCollection(props.collection)\n    this.defaults = Object.freeze(props.defaults)\n\n    this.length = this._onGetLength.bind(this)\n    this.all = this._onGetAll.bind(this)\n    this.findById = this._onFindById.bind(this)\n    this.findWhere = this._onFindWhere.bind(this)\n    this.add = this._onAdd.bind(this)\n    this.update = this._onUpdate.bind(this)\n  }\n\n  _initializeCollection(collection = []) {\n    this.collection = this._copy(collection)\n  }\n\n  // quick copies arrays/objects\n  _copy(obj = {}) {\n    return JSON.parse(JSON.stringify(obj))\n  }\n\n  _onGetAll() {\n    return this._copy(this.collection)\n  }\n\n  _onGetLength() {\n    return this.collection.length\n  }\n\n  /**\n   * takes an ID and returns the first model that matches\n   * TODO: refine and allow search by params\n   */\n  _onFindById(id) {\n    const model = this.collection.find(model => model.id === id)\n    return model ? this._copy(model) : undefined\n  }\n\n  /**\n   * Returns a filtered collection by a search query\n   */\n  _onFindWhere(query = {}) {\n    let collection = this.all(this.collection)\n    const params = Object.keys(query)\n    params.forEach(param => {\n      const value = query[param]\n      collection = collection.filter(item => item[param] === value)\n    })\n\n    return collection\n  }\n\n  /**\n   * Adds a new object to the collection\n   * Returns the new item, with defaults added\n   */\n  _onAdd(attrs = {}) {\n    const newAttrs = [\n      {},\n      this.defaults,\n      { id: this._getNewId() },\n      attrs,\n    ]\n\n    const newModel = Object.assign(...newAttrs)\n    this.collection.push(newModel)\n    return this._copy(newModel)\n  }\n\n  /**\n   * Updates a model in the collection\n   * Attributes must include model id\n   */\n  _onUpdate(attrs = {}) {\n    const modelId = attrs.id\n    if (!attrs.id) return \n\n    // going to create a new collection to track mutations\n    // not entirely sure if this will be necessary.. but..\n    const newCollection = this._copy(this.collection)\n    let model = newCollection.find(model => model.id === modelId)\n    if (!model) return\n\n    model = Object.assign(model, attrs)\n    this.collection = newCollection\n    return this._copy(model)\n  }\n\n  _getNewId() {\n    const maxId = this.collection.reduce((max, next) => {\n      return Math.max(max, next.id)\n    }, 0)\n    return maxId + 1\n  }\n}","import { Model } from './lib/Model'\nimport { cards, categories } from './seeds'\n\nexport const Category = new Model({\n  collection: categories,\n  defaults: {\n    name: 'New Category',\n    description: 'This is a new Category',\n    color: 'red',\n  }\n})\n\nexport const Card = new Model({\n  collection: cards,\n  defaults: {\n    name: 'New Card',\n    description: 'This is a new card',\n    text: 'Insert text here' \n  }\n})","export const cards = [\n  {\n    id: 1,\n    categoryId: 1,\n    name: 'Allan Goode',\n    description: `Generally a good guy who's done amazing heroics`,\n    text: `Born in a small village, blah blah blah blah`,\n  },\n  {\n    id: 2,\n    categoryId: 1,\n    name: 'Jerry Smith',\n    description: 'Yawn',\n    text: 'Lorem ipsum blah blah blah'\n  },\n  {\n    id: 3,\n    categoryId: 1,\n    name: 'Mike Truck',\n    description: 'Built like a truck',\n    text: 'Part man, part car'\n  },\n  {\n    id: 4,\n    categoryId: 2,\n    name: 'Riverbend',\n    description: 'Small river fishing village',\n    text: `The birthplace of Allan Goode, this is blah blah blah`\n  },\n  {\n    id: 5,\n    categoryId: 2,\n    name: 'Rocksville',\n    description: 'Mining camp',\n    text: 'hi ho hi ho'\n  }\n]\n\nexport const categories = [\n  {\n    id: 1,\n    name: 'Character',\n    description: 'A list of major and minor characters',\n    color: 'red',\n  },\n  {\n    id: 2,\n    name: 'Location',\n    description: 'Noteworthy locations',\n    color: 'green',\n  }\n]","import React from 'react'\n\nexport default function CardListItem(props) {\n  let className = 'name'\n  if (props.isActive) className += ' active'\n\n  return (\n    <span\n      className={className}\n      alt={props.isActive ? 'Active Card' : ''}\n      onClick={() => props.handleChangeCard(props.card.id)}\n    >\n      {props.card.name}\n    </span>\n  )\n}","import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CardListItem from './CardListItem'\n\nclass CardList extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      cards: props.cards,\n      activeCardId: props.activeCardId,\n      activeCategoryId: props.activeCategoryId\n    }\n  }\n\n  componentDidMount() {\n    this.setStateDelayed({ show: true })\n  }\n\n  componentWillUnmount() {\n    this.clearTimeout()\n  }\n\n  clearTimeout() {\n    if (this.timeOut) {\n      clearTimeout(this.timeOut)\n    }\n  }\n\n  setStateDelayed(newState, delay = 300) {\n    this.timeOut = setTimeout(() => {\n      this.setState(newState)\n    }, delay)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.activeCategoryId !== this.props.activeCategoryId) {\n      this.setState({ activeCategoryId: nextProps.activeCategoryId})\n    }\n\n    if (JSON.stringify(nextProps.cards) !== JSON.stringify(this.props.cards)) {\n      this.clearTimeout()\n      this.setState({ show: false })\n      this.setStateDelayed({\n        cards: nextProps.cards,\n        show: true,\n        activeCardId: nextProps.activeCardId\n      })\n    } else if (nextProps.activeCardId !== this.props.activeCardId) {\n      this.setState({ activeCardId: nextProps.activeCardId })\n    }\n  }\n\n  // TODO: refactor some of this into functional components\n  render() {\n    const cards = this.state.cards.map(card => {\n      return (\n        <li\n          key={card.id}\n        >\n          <CardListItem\n            isActive={card.id === this.state.activeCardId}\n            handleChangeCard={this.props.handleChangeCard}\n            card={card}\n          />\n        </li>\n      )\n    })\n\n    let className = `card-list list-container`\n    if (this.state.show) className += ` show`\n\n    return (\n      <nav className={className}>\n        <ul>\n          { cards }\n          <li \n            className='add-button'\n            key='addCard'\n            onClick={() => this.props.handleAddCard(this.state.activeCategoryId)}\n          >\n            <FontAwesomeIcon icon={['far', 'plus-square']} />\n          </li>\n        </ul>\n      </nav>\n    )\n  }\n}\n\nexport default CardList","import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport class CancelConfirmButton extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      show: props.show || false,\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.show !== this.props.show) {\n      this.setState({ show: nextProps.show })\n    }\n  }\n\n  render() {\n    let className = 'cancel-confirm'\n    if (this.state.show) className += ' show'\n\n    return (\n      <span className={className}>\n        <span\n          className='cancel-button button'\n          onClick={() => this.props.handleClickCancel()}\n        >\n          <FontAwesomeIcon icon={['far', 'times-circle']} />\n        </span>\n\n        <span\n          className='confirm-button button'\n          onClick={() => this.props.handleClickConfirm()}\n        >\n          <FontAwesomeIcon icon={['far', 'check-circle']} />\n        </span>\n      </span>\n    )\n  }\n}","import React, { Component } from 'react'\nimport { CancelConfirmButton } from './CancelConfirmButton'\n\nexport default class MicroEditor extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      text: props.text,\n      isActive: props.isActive || false,\n    }\n    this.input = React.createRef()\n    this.handleChangeActive = this._onChangeActive.bind(this)\n    this.handleClickCancel = this._onClickCancel.bind(this)\n    this.handleClickConfirm = this._onClickConfirm.bind(this)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.text !== this.props.text) {\n      this.setState({ text: nextProps.text })\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.isActive) this.focus()\n  }\n\n  _onChangeActive(isActive) {\n    this.setState({ isActive })\n    if (isActive) this.focus()\n  }\n\n  focus() {\n    // workaround to auto-focus to newly-contentEditable element\n    setTimeout(() => {\n      this.input.current.focus()\n    },0)\n  }\n\n  _onClickCancel() {\n    this.input.current.innerText = this.state.text\n    this.handleChangeActive(false)\n    if (this.props.handleClickCancel) this.props.handleClickCancel()\n  }\n\n  _onClickConfirm() {\n    this.handleChangeActive(false)\n    const newText = this.input.current.innerText || this.props.defaultText\n    this.props.handleClickConfirm(newText)\n  }\n\n  render() {\n    const text = this.state.text || this.props.defaultText\n    let inputClass = 'editor'\n    if (this.state.isActive) inputClass += ' focus'\n\n    return (\n      <span className='editor-container'>\n        <span\n          ref={this.input}\n          className={inputClass}\n          onClick={() => this.handleChangeActive(true)}\n          contentEditable={this.state.isActive}\n        >\n          {text}\n        </span>\n        <CancelConfirmButton\n          show={this.state.isActive}\n          handleClickCancel={() => this.handleClickCancel()}\n          handleClickConfirm={() => this.handleClickConfirm()}\n        />\n      </span>\n    )\n  }\n}","import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport MicroEditor from './MicroEditor'\n\nexport default class CategoryListItem extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isActive: props.isActive,\n      isEditor: false,\n      category: props.category\n    }\n\n    this.handleClickEdit = this._onClickEdit.bind(this)\n    this.handleClickCancel = this._onClickCancel.bind(this)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.state.category !== nextProps.category) {\n      this.setState({ category: nextProps.category })\n    }\n    if (this.state.isActive !== nextProps.isActive) {\n      this.setState({ isActive: nextProps.isActive })\n    }\n  }\n\n  _onClickEdit() {\n    this.setState({ isEditor: true })\n  }\n\n  _onClickCancel() {\n    this.setState({ isEditor: false })\n  }\n\n  render() {\n    const category = this.state.category\n    const isActive = this.state.isActive\n    const isEditor = this.state.isEditor\n\n    const editIcon = (\n      <span  \n        className='edit-button'\n        onClick={this.handleClickEdit}\n      >\n        <FontAwesomeIcon icon={['far', 'edit']} />\n      </span>\n    )\n\n    let className = 'name'\n    if (isActive) className += ' active'\n\n    const navCategoryName = (\n      <span\n        className={className}\n        alt={isActive ? 'Active Category' : ''}\n        onClick={() => this.props.handleChangeCategory(category.id)}\n      >\n        {category.name}\n      </span>\n    )\n\n    const editCategoryName = (\n      <MicroEditor\n        text={category.name}\n        defaultText='Untitled'\n        handleClickCancel={this.handleClickCancel}\n        handleClickConfirm={name => {\n          this.setState({ isEditor: false })\n          this.props.handleUpdateCategory(category.id, { name })\n        }}\n        isActive={true}\n      />\n    )\n\n    const categoryName = isEditor ? editCategoryName : navCategoryName\n\n    return (\n      <li key={category.id}>\n        {categoryName}\n        {isEditor ? '' : editIcon}\n      </li>\n    )\n  }\n}","import React, { Component } from 'react'\nimport CategoryListItem from './CategoryListItem'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nclass CategoryList extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      categories: props.categories,\n      activeCategoryId: props.activeCategoryId\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.activeCategoryId !== this.props.activeCategoryId) {\n      this.setState({ activeCategoryId: nextProps.activeCategoryId })\n    }\n\n    // TODO: add better comparison\n    if (nextProps.categories !== this.props.categories) {\n      this.setState({ categories: nextProps.categories })\n    }\n  }\n\n  render() {\n    const categories = this.state.categories.map(category => {\n      return (\n        <CategoryListItem \n          category={category}\n          isActive={category.id === this.state.activeCategoryId}\n          handleChangeCategory={this.props.handleChangeCategory}\n          handleUpdateCategory={this.props.handleUpdateCategory}\n        />\n      )\n    })\n\n    return (\n      <nav className=\"category-list list-container\">\n        <ul>\n          { categories }\n          <li \n            className='add-button'\n            key='addCategory'\n            onClick={() => this.props.handleAddCategory()}\n          >\n            <FontAwesomeIcon icon={['far', 'plus-square']} />\n          </li>\n        </ul>\n      </nav>\n    )\n  }\n}\n\nexport default CategoryList","import React, { Component } from 'react'\nimport MicroEditor from './MicroEditor'\n\nexport default class CardEditor extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { card: props.card }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.card !== this.props.card) {\n      this.setState({ card: nextProps.card })\n    }\n  }\n\n  render() {\n    const card = this.state.card\n    if (!card) {\n      return null\n    }\n\n    return (\n      <article className=\"card-container\">\n        <header>\n          <h1 className='card-name'>\n            <MicroEditor\n              text={card.name}\n              defaultText='Untitled'\n              handleClickConfirm={name => {\n                this.props.handleUpdateCard(card.id, { name })\n              }}\n            />\n          </h1>\n        </header>\n\n        <section>\n          <header class='card-section-header'>\n            Summary\n          </header>\n          <div className=\"card-description\">\n            <MicroEditor\n              text={card.description}\n              defaultText='Insert a summary'\n              handleClickConfirm={description => {\n                this.props.handleUpdateCard(card.id, { description })\n              }}\n            />\n          </div>\n        </section>\n\n        <main>\n          <header class='card-section-header'>\n            Notes\n          </header>\n          <div className=\"card-text\">\n            <MicroEditor\n              text={card.text}\n              defaultText='Insert notes here'\n              handleClickConfirm={text => {\n                this.props.handleUpdateCard(card.id, { text })\n              }}\n            />\n          </div>\n        </main>\n      </article>\n    )\n  }\n}","import React, { Component } from 'react'\nimport { Category, Card } from '../../models'\nimport { CategoryList, CardList, CardEditor } from '../lib'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    const categories = Category.all()\n    const activeCategoryId = categories[0].id\n    const cards = Card.findWhere({ categoryId: activeCategoryId })\n    const activeCardId = cards[0].id\n    \n    this.state = { \n      categories,\n      cards,\n      activeCategoryId,\n      activeCardId,\n    }\n\n    this.handleAddCategory = this._onAddCategory.bind(this)\n    this.handleChangeCategory = this._onChangeCategory.bind(this)\n    this.handleUpdateCategory = this._onUpdateCategory.bind(this)\n    this.handleChangeCard = this._onChangeCard.bind(this)\n    this.handleAddCard = this._onAddCard.bind(this)\n    this.handleUpdateCard = this._onUpdateCard.bind(this)\n  }\n\n  _onChangeCategory(id) {\n    const cards = Card.findWhere({ categoryId: id })\n    const activeCard = cards[0] || {}\n\n    this.setState({\n      activeCategoryId: id,\n      activeCardId: activeCard.id\n    })\n  }\n\n  _onAddCategory(categoryInfo) {\n    const newCategory = Category.add(categoryInfo)\n    this.setState({\n      categories: Category.all(),\n      activeCategoryId: newCategory.id\n    })\n  }\n\n  _onUpdateCategory(categoryId, newValues = {}) {\n    const newParams = Object.assign({ id: categoryId }, newValues)\n    Category.update(newParams)\n    this.setState({\n      categories: Category.all()\n    })\n  }\n\n  _onAddCard(categoryId, cardInfo) {\n    const newParams = Object.assign({}, { categoryId }, cardInfo)\n    const newCard = Card.add(newParams)\n\n    this.setState({\n      cards: Card.all(),\n      activeCardId: newCard.id\n    })\n  }\n\n  _onUpdateCard(cardId, newValues = {}) {\n    const newParams = Object.assign({ id: cardId }, newValues)\n    Card.update(newParams)\n    this.setState({\n      cards: Card.all()\n    })\n  }\n\n  getActiveCard() {\n    const activeCardId = this.state.activeCardId\n    return Card.findById(activeCardId)\n  }\n\n  getActiveCards() {\n    const activeCategoryId = this.state.activeCategoryId\n    return Card.findWhere({ categoryId: activeCategoryId })\n  }\n\n  _onChangeCard(id) {\n    this.setState({ activeCardId: id })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CategoryList\n          categories={this.state.categories}\n          activeCategoryId={this.state.activeCategoryId}\n          handleChangeCategory={this.handleChangeCategory}\n          handleAddCategory={this.handleAddCategory}\n          handleUpdateCategory={this.handleUpdateCategory}\n        />\n        <CardList\n          cards={this.getActiveCards()} // TODO: I don't think this works right\n          activeCategoryId={this.state.activeCategoryId}\n          activeCardId={this.state.activeCardId}\n          handleChangeCard={this.handleChangeCard}\n          handleAddCard={this.handleAddCard}\n        />\n        <CardEditor\n          card={this.getActiveCard()} // TODO: make more better\n          handleUpdateCard={this.handleUpdateCard}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport './App.scss'\n\nimport { Switch, Route } from 'react-router-dom'\nimport { Main, Login } from './components/pages'\n\n// TODO: reduce glut once I know which icons I need\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fas } from '@fortawesome/free-solid-svg-icons'\nimport { far } from '@fortawesome/free-regular-svg-icons'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nlibrary.add(fas, far, fab)\n\nexport default function App() {\n  return (\n    <main>\n      <Switch>\n        <Route exact path='/' component={Main} />\n        <Route path='/login' component={Login} />\n        <Route component={Main} />\n      </Switch>\n    </main>\n  )\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available please refresh.\" message in your web app.\n              console.log('New content is available please refresh.')\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nimport { BrowserRouter } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render((\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n), document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}